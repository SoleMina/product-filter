{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmitDone","className","onSubmit","this","type","value","onChange","e","setState","target","toUpperCase","onClick","console","log","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","alt_description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","imagenIndividual","images","map","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","length","ReactDOM","render","document","querySelector"],"mappings":"oPAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,4BACTC,QAAS,CACPC,cAAe,2D,OCyCJC,E,4MA3CbC,MAAQ,CAAEC,KAAM,I,EAchBC,aAAe,SAACC,GACdA,EAAMC,iBAEN,EAAKC,MAAMC,aAAa,EAAKN,MAAMC,O,4CAGrC,WAAU,IAAD,OACP,OACE,qBAAKM,UAAU,aAAf,SACE,sBAAMA,UAAU,UAAUC,SAAUC,KAAKP,aAAzC,SACE,sBAAKK,UAAU,QAAf,UACE,iDACA,uBACEG,KAAK,OACLC,MAAOF,KAAKT,MAAMC,KAClBW,SAAU,SAACC,GAAD,OACR,EAAKC,SAAS,CAAEb,KAAMY,EAAEE,OAAOJ,MAAMK,iBAIvCC,QAAS,kBAAMC,QAAQC,IAAI,mC,GAnCjBC,IAAMC,WCwBfC,G,wDAvBb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAQRkB,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,GAAK,GACtC,EAAKV,SAAS,CAAEc,MAAOA,KAVvB,EAAK5B,MAAQ,CAAE4B,MAAO,GACtB,EAAKH,SAAWL,IAAMW,YAHL,E,qDAMnB,WACEtB,KAAKgB,SAASC,QAAQM,iBAAiB,OAAQvB,KAAKc,Y,oBAOtD,WACE,MAAkCd,KAAKJ,MAAM4B,MAArCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,KACzB,OACE,qBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAU5B,KAAKT,MAAM4B,QAA7C,SACE,qBAAKU,IAAK7B,KAAKgB,SAAUc,IAAKL,EAAiBM,IAAKL,EAAKM,gB,GAnBzCrB,IAAMC,YCgBfqB,EAdG,SAACrC,GACjB,IAAMsC,EAAmBtC,EAAMuC,OAAOC,KAAI,SAACZ,GACzC,OACE,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMa,OAOjB,OAAO,qBAAKvC,UAAU,aAAf,SAA6BoC,KCevBI,E,4MAxBb/C,MAAQ,CAAE4C,OAAQ,I,EAElBI,e,uCAAiB,WAAO/C,GAAP,eAAAgD,EAAA,sEACQC,EAASC,IAC9B,yCACA,CAAEC,OAAQ,CAAEC,MAAOpD,KAHN,OACTqD,EADS,OAKf,EAAKxC,SAAS,CAAE8B,OAAQU,EAASC,KAAKC,UALvB,2C,kGAWjB,WACE,OACE,sBAAKjD,UAAU,eAAe6B,MAAO,CAAEqB,UAAW,QAAlD,UACE,cAAC,EAAD,CAAWnD,aAAcG,KAAKuC,iBADhC,UAEUvC,KAAKT,MAAM4C,OAAOc,OAF5B,UAGE,cAAC,EAAD,CAAWd,OAAQnC,KAAKT,MAAM4C,gB,GAnBpBxB,IAAMC,WCAxBsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.9c8b16b6.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.unsplash.com/\",\n  headers: {\n    Authorization: \"Client-ID kOG2aCF2S6WBFW1LzKqCgU9UkUfkM2QU1HjIadK5U9Q\"\n  }\n});\n","import React from \"react\";\n\nclass SearchBar extends React.Component {\n  state = { term: \"\" };\n  /* OLD VERSION\n  onInputChange(event) {\n    console.log(event.target.value);\n  }\n  onInputClick() {\n    console.log(\"Input was clicked\");\n  }\n  onFormSubmit(event) {\n    event.preventDefault();\n    console.log(this.state.term);\n  }\n  onSubmit={(event) => this.onFormSubmit(event)}\n  */\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    //console.log(this.state.term);\n    this.props.onSubmitDone(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n          <div className=\"field\">\n            <label>Image Search</label>\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={(e) =>\n                this.setState({ term: e.target.value.toUpperCase() })\n              }\n              //onChange={(e) => console.log(e.target.value)}\n              //onChange={this.onInputChange}\n              onClick={() => console.log(\"input was clicked\")}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { spans: 0 };\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n    const spans = Math.ceil(height / 10 + 1);\n    this.setState({ spans: spans });\n  };\n  render() {\n    const { alt_description, urls } = this.props.image;\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img ref={this.imageRef} alt={alt_description} src={urls.regular} />\n      </div>\n    );\n  }\n}\nexport default ImageCard;\n","import \"./ImageList.css\";\nimport React from \"react\";\nimport ImageCard from \"./ImageCard\";\n\nconst ImageList = (props) => {\n  const imagenIndividual = props.images.map((image) => {\n    return (\n      <ImageCard\n        key={image.id}\n        image={image}\n        //src={image.urls.regular}\n        //alt={`Producto ${image.alt_description}`}\n      />\n    );\n  });\n  return <div className=\"image-list\">{imagenIndividual}</div>;\n};\n\nexport default ImageList;\n","import React from \"react\";\nimport unsplash from \"../api/unsplash\";\nimport SearchBar from \"./SearchBar\";\nimport ImageList from \"./ImageList\";\n\nclass App extends React.Component {\n  state = { images: [] };\n\n  onSearchSubmit = async (term) => {\n    const response = await unsplash.get(\n      \"https://api.unsplash.com/search/photos\",\n      { params: { query: term } }\n    );\n    this.setState({ images: response.data.results });\n    //When working with a promise use then\n    //.then((response) => {\n    //console.log(response.data.results);\n    //});\n  };\n  render() {\n    return (\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\n        <SearchBar onSubmitDone={this.onSearchSubmit} />\n        Found: {this.state.images.length} images\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\n//Take the react component and show it on the screen\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}